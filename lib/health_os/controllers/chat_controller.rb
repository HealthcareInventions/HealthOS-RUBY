# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module HealthOs
  class ChatController < BaseController
    @@instance = ChatController.new
    # Singleton instance of the controller class
    def self.instance
      @@instance
    end

    # TODO: Add Description
    # @return Mixed response from the API call
    def get_excercises_chat

      # prepare query url
      _query_builder = Configuration.base_uri.dup % [Configuration.host]
      _query_builder << '/chat/excercises/i did swimming for 1 hour'
      _query_url = APIHelper.clean_url _query_builder

      # prepare headers
      _headers = {
        'accept' => 'application/json'
      }

      # prepare and execute HttpRequest
      _request = @http_client.get _query_url, headers: _headers
      OAuth2.apply(_request)
      _context = execute_request(_request)
      validate_response(_context)

      # return appropriate response type
      decoded = APIHelper.json_deserialize(_context.response.raw_body) if not (_context.response.raw_body.nil? or _context.response.raw_body.to_s.strip.empty?)
      return decoded
    end

    # TODO: Add Description
    # @return Mixed response from the API call
    def get_food_items_chat

      # prepare query url
      _query_builder = Configuration.base_uri.dup % [Configuration.host]
      _query_builder << '/chat/food/i ate 2 aloo parathas'
      _query_url = APIHelper.clean_url _query_builder

      # prepare headers
      _headers = {
        'accept' => 'application/json'
      }

      # prepare and execute HttpRequest
      _request = @http_client.get _query_url, headers: _headers
      OAuth2.apply(_request)
      _context = execute_request(_request)
      validate_response(_context)

      # return appropriate response type
      decoded = APIHelper.json_deserialize(_context.response.raw_body) if not (_context.response.raw_body.nil? or _context.response.raw_body.to_s.strip.empty?)
      return decoded
    end

    # TODO: Add Description
    # @return Mixed response from the API call
    def get_medicine_chat

      # prepare query url
      _query_builder = Configuration.base_uri.dup % [Configuration.host]
      _query_builder << '/chat/medicines/what is combiflam used for'
      _query_url = APIHelper.clean_url _query_builder

      # prepare headers
      _headers = {
        'accept' => 'application/json'
      }

      # prepare and execute HttpRequest
      _request = @http_client.get _query_url, headers: _headers
      OAuth2.apply(_request)
      _context = execute_request(_request)
      validate_response(_context)

      # return appropriate response type
      decoded = APIHelper.json_deserialize(_context.response.raw_body) if not (_context.response.raw_body.nil? or _context.response.raw_body.to_s.strip.empty?)
      return decoded
    end
  end
end
