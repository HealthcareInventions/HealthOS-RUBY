# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module HealthOs
  class ExercisesResponse < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :category

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :calory_count

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :cardio_subcategory

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :primary_muscle_group

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :exercise_id

    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :search_score

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["name"] = "name"
        @hash["category"] = "category"
        @hash["calory_count"] = "calory_count"
        @hash["cardio_subcategory"] = "cardio_subcategory"
        @hash["primary_muscle_group"] = "primary_muscle_group"
        @hash["exercise_id"] = "exercise_id"
        @hash["search_score"] = "search_score"
      end
      @hash
    end

    def initialize(name = nil,
                   category = nil,
                   calory_count = nil,
                   cardio_subcategory = nil,
                   primary_muscle_group = nil,
                   exercise_id = nil,
                   search_score = nil)
      @name = name
      @category = category
      @calory_count = calory_count
      @cardio_subcategory = cardio_subcategory
      @primary_muscle_group = primary_muscle_group
      @exercise_id = exercise_id
      @search_score = search_score
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        name = hash["name"]
        category = hash["category"]
        calory_count = hash["calory_count"]
        cardio_subcategory = hash["cardio_subcategory"]
        primary_muscle_group = hash["primary_muscle_group"]
        exercise_id = hash["exercise_id"]
        search_score = hash["search_score"]

        # Create object from extracted values
        ExercisesResponse.new(name,
                              category,
                              calory_count,
                              cardio_subcategory,
                              primary_muscle_group,
                              exercise_id,
                              search_score)
      end
    end
  end
end
