# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module HealthOs
  class SearchLabTestsResponse < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :alternate_name

    # TODO: Write general description for this method
    # @return [LabTestData]
    attr_accessor :lab_test_data

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :lab_test_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :lab_test_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :search_score

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["alternate_name"] = "alternate_name"
        @hash["lab_test_data"] = "lab_test_data"
        @hash["lab_test_id"] = "lab_test_id"
        @hash["lab_test_name"] = "lab_test_name"
        @hash["id"] = "id"
        @hash["search_score"] = "search_score"
      end
      @hash
    end

    def initialize(alternate_name = nil,
                   lab_test_data = nil,
                   lab_test_id = nil,
                   lab_test_name = nil,
                   id = nil,
                   search_score = nil)
      @alternate_name = alternate_name
      @lab_test_data = lab_test_data
      @lab_test_id = lab_test_id
      @lab_test_name = lab_test_name
      @id = id
      @search_score = search_score
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        alternate_name = hash["alternate_name"]
        lab_test_data = LabTestData.from_hash(hash["lab_test_data"]) if hash["lab_test_data"]
        lab_test_id = hash["lab_test_id"]
        lab_test_name = hash["lab_test_name"]
        id = hash["id"]
        search_score = hash["search_score"]

        # Create object from extracted values
        SearchLabTestsResponse.new(alternate_name,
                                   lab_test_data,
                                   lab_test_id,
                                   lab_test_name,
                                   id,
                                   search_score)
      end
    end
  end
end
