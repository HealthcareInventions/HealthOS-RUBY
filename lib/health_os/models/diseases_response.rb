# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).

module HealthOs
  class DiseasesResponse < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :disease_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :disease_cat

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :disease_info

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :disease_id

    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :search_score

    # A mapping from model property names to API property names
    def self.names
      if @hash.nil?
        @hash = {}
        @hash["disease_name"] = "disease_name"
        @hash["disease_cat"] = "disease_cat"
        @hash["disease_info"] = "disease_info"
        @hash["disease_id"] = "disease_id"
        @hash["search_score"] = "search_score"
      end
      @hash
    end

    def initialize(disease_name = nil,
                   disease_cat = nil,
                   disease_info = nil,
                   disease_id = nil,
                   search_score = nil)
      @disease_name = disease_name
      @disease_cat = disease_cat
      @disease_info = disease_info
      @disease_id = disease_id
      @search_score = search_score
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        disease_name = hash["disease_name"]
        disease_cat = hash["disease_cat"]
        disease_info = hash["disease_info"]
        disease_id = hash["disease_id"]
        search_score = hash["search_score"]

        # Create object from extracted values
        DiseasesResponse.new(disease_name,
                             disease_cat,
                             disease_info,
                             disease_id,
                             search_score)
      end
    end
  end
end
